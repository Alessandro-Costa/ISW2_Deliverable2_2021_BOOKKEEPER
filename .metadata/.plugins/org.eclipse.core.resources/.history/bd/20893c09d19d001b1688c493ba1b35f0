package deliverable;

import java.io.File;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.HashMap;

import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.api.errors.NoHeadException;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.lib.RepositoryBuilder;
import org.eclipse.jgit.revwalk.RevCommit;
 
public class GetCommitInfo{
	
	public static HashMap<String, LocalDateTime> commitList(String ticket) throws IOException, NoHeadException, GitAPIException {
		HashMap <String, LocalDateTime> ticketCommitsDate = new HashMap <String, LocalDateTime>();
		LocalDateTime var = LocalDateTime.now();
		File dir= new File("/home/alessandro/eclipse-workspace/bookkeeper/.git");
		RepositoryBuilder build = new RepositoryBuilder();
		Repository rep = build.setGitDir(dir).readEnvironment().findGitDir().build();
		Git git = new Git(rep);
		Iterable<RevCommit> log = git.log().call();
		for(RevCommit r : log) {
				if(ticketCommitsDate.containsValue(null)) {
					ticketCommitsDate.put(ticket,r.getAuthorIdent().getWhen().toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime());
					var = r.getAuthorIdent().getWhen().toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
				}
			    if(var.isBefore(r.getAuthorIdent().getWhen().toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime())) {
			    	ticketCommitsDate.put(ticket,r.getAuthorIdent().getWhen().toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime());
			    }
		}
		System.out.println("Ho messo il" + ticket + "nella HashMap");
		git.close();
		System.out.println(ticketCommitsDate);
		return ticketCommitsDate;
	}
}